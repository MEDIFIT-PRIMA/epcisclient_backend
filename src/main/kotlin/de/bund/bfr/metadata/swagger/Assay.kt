/**
 * RAKIP Generic model
 * TODO
 *
 * OpenAPI spec version: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package de.bund.bfr.metadata.swagger


/**
 * 
 * @param name A name given to the assay
 * @param description General description of the assay. Corresponds to the Protocol REF in ISA
 * @param moisturePercentage Percentage of moisture in the original sample
 * @param fatPercentage Percentage of fat in the original sample
 * @param detectionLimit Limit of detection reported in the unit specified by the variable 'Hazard unit'
 * @param quantificationLimit Limit of quantification reported in the unit specified by the variable 'Hazard unit'
 * @param leftCensoredData Percentage of measures equal to LOQ and/or LOD
 * @param contaminationRange Range of result of the analytical measure reported in the unit specified by the variable 'Hazard unit' before censored data treatment
 * @param uncertaintyValue Indicate the expanded uncertainty (usually 95% confidence interval) value associated with the measurement expressed in the unit reported in the field 'Hazard unit'
 */
data class Assay (

    /* A name given to the assay */
    val name: kotlin.String,
    /* General description of the assay. Corresponds to the Protocol REF in ISA */
    val description: kotlin.String? = null,
    /* Percentage of moisture in the original sample */
    val moisturePercentage: kotlin.String? = null,
    /* Percentage of fat in the original sample */
    val fatPercentage: kotlin.String? = null,
    /* Limit of detection reported in the unit specified by the variable 'Hazard unit' */
    val detectionLimit: kotlin.String? = null,
    /* Limit of quantification reported in the unit specified by the variable 'Hazard unit' */
    val quantificationLimit: kotlin.String? = null,
    /* Percentage of measures equal to LOQ and/or LOD */
    val leftCensoredData: kotlin.String? = null,
    /* Range of result of the analytical measure reported in the unit specified by the variable 'Hazard unit' before censored data treatment */
    val contaminationRange: kotlin.String? = null,
    /* Indicate the expanded uncertainty (usually 95% confidence interval) value associated with the measurement expressed in the unit reported in the field 'Hazard unit' */
    val uncertaintyValue: kotlin.String? = null
) {
}