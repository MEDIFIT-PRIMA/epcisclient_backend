/**
 * RAKIP Generic model
 * TODO
 *
 * OpenAPI spec version: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package de.bund.bfr.metadata.swagger


/**
 * 
 * @param isReferenceDescription Indicates whether this specific publication serves as the reference description for the model. There has to be at least one reference where this field is set to 'True'
 * @param publicationType The type of publication, e.g. Report, Journal article, Book, Online database, ...
 * @param date Temporal information on the publication date
 * @param pmid The PubMed ID related to this publication
 * @param doi The DOI related to this publication
 * @param authorList Name and surname of the authors who contributed to this publication
 * @param title Title of the publication in which the model or the data has been described
 * @param &#x60;abstract&#x60; Abstract of the publication in which the model or the data has been described
 * @param journal Data on the details of the journal in which the model or the data has been described
 * @param volume Data on the details of the journal in which the model or the data has been described
 * @param issue Data on the details of the journal in which the model or the data has been described
 * @param status The status of this publication, e.g. Published, Submitted, etc.
 * @param website A link to the publication website (different from DOI)
 * @param comment Further comments related to the reference description, e.g. which section in there describes the specific model or which figure in there can be reproduced with the visualization script
 */
data class Reference (

    /* Indicates whether this specific publication serves as the reference description for the model. There has to be at least one reference where this field is set to 'True' */
    val isReferenceDescription: kotlin.Boolean,
    /* The type of publication, e.g. Report, Journal article, Book, Online database, ... */
    val publicationType: Reference.PublicationType? = null,
    /* Temporal information on the publication date */
    val date: java.time.LocalDate? = null,
    /* The PubMed ID related to this publication */
    val pmid: kotlin.String? = null,
    /* The DOI related to this publication */
    val doi: kotlin.String,
    /* Name and surname of the authors who contributed to this publication */
    val authorList: kotlin.String? = null,
    /* Title of the publication in which the model or the data has been described */
    val title: kotlin.String,
    /* Abstract of the publication in which the model or the data has been described */
    val `abstract`: kotlin.String? = null,
    /* Data on the details of the journal in which the model or the data has been described */
    val journal: kotlin.String? = null,
    /* Data on the details of the journal in which the model or the data has been described */
    val volume: kotlin.String? = null,
    /* Data on the details of the journal in which the model or the data has been described */
    val issue: kotlin.String? = null,
    /* The status of this publication, e.g. Published, Submitted, etc. */
    val status: kotlin.String? = null,
    /* A link to the publication website (different from DOI) */
    val website: kotlin.String? = null,
    /* Further comments related to the reference description, e.g. which section in there describes the specific model or which figure in there can be reproduced with the visualization script */
    val comment: kotlin.String? = null
) {
    /**
    * The type of publication, e.g. Report, Journal article, Book, Online database, ...
    * Values: ABST,ADVS,AGGR,ANCIENT,ART,BILL,BLOG,BOOK,CASE,CHAP,CHART,CLSWK,COMP,CONF,CPAPER,CTLG,DATA,DBASE,DICT,EBOOK,ECHAP,EDBOOK,EJOUR,ELECT,ENCYC,EQUA,FIGURE,GEN,GOVDOC,GRANT,HEAR,ICOMM,INPR,JOUR,JFULL,LEGAL,MANSCPT,MAP,MGZN,MPCT,MULTI,MUSIC,NEW,PAMP,PAT,PCOMM,RPRT,SER,SLIDE,SOUND,STAND,STAT,THES,UNPB,VIDEO
    */
    enum class PublicationType(val value: kotlin.String){
        ABST("ABST"),
        ADVS("ADVS"),
        AGGR("AGGR"),
        ANCIENT("ANCIENT"),
        ART("ART"),
        BILL("BILL"),
        BLOG("BLOG"),
        BOOK("BOOK"),
        CASE("CASE"),
        CHAP("CHAP"),
        CHART("CHART"),
        CLSWK("CLSWK"),
        COMP("COMP"),
        CONF("CONF"),
        CPAPER("CPAPER"),
        CTLG("CTLG"),
        DATA("DATA"),
        DBASE("DBASE"),
        DICT("DICT"),
        EBOOK("EBOOK"),
        ECHAP("ECHAP"),
        EDBOOK("EDBOOK"),
        EJOUR("EJOUR"),
        ELECT("ELECT"),
        ENCYC("ENCYC"),
        EQUA("EQUA"),
        FIGURE("FIGURE"),
        GEN("GEN"),
        GOVDOC("GOVDOC"),
        GRANT("GRANT"),
        HEAR("HEAR"),
        ICOMM("ICOMM"),
        INPR("INPR"),
        JOUR("JOUR"),
        JFULL("JFULL"),
        LEGAL("LEGAL"),
        MANSCPT("MANSCPT"),
        MAP("MAP"),
        MGZN("MGZN"),
        MPCT("MPCT"),
        MULTI("MULTI"),
        MUSIC("MUSIC"),
        NEW("NEW"),
        PAMP("PAMP"),
        PAT("PAT"),
        PCOMM("PCOMM"),
        RPRT("RPRT"),
        SER("SER"),
        SLIDE("SLIDE"),
        SOUND("SOUND"),
        STAND("STAND"),
        STAT("STAT"),
        THES("THES"),
        UNPB("UNPB"),
        VIDEO("VIDEO");
    }
}